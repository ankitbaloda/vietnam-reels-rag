services:
  qdrant:
    image: qdrant/qdrant:v1.9.1
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage

  flowise:
    image: flowiseai/flowise:latest
    container_name: flowise
    depends_on:
      - qdrant
    environment:
      - PORT=3000
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=admin
      - DATABASE_PATH=/root/.flowise
      - LOG_LEVEL=info
      - DISABLE_FLOWISE_TELEMETRY=true
    ports:
      - "3000:3000"
    volumes:
      - flowise_data:/root/.flowise
      - ./flows:/app/flows
      - ./data/source:/app/data/source
      - ./prompts:/app/flows_prompts

  indexer:
    image: python:3.12-slim
    container_name: indexer
    depends_on:
      - qdrant
    working_dir: /workspace
    volumes:
      - ./:/workspace
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL}
      - OPENROUTER_SITE_URL=${OPENROUTER_SITE_URL}
      - OPENROUTER_APP_NAME=${OPENROUTER_APP_NAME}
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - EMBEDDINGS_MODEL=${EMBEDDINGS_MODEL}
    entrypoint: ["bash", "-lc", "pip install -r requirements.txt && python scripts/build_hierarchical_index.py --source-dir data/source --collection flowise_reels --embeddings-model ${EMBEDDINGS_MODEL:-text-embedding-3-large} --qdrant-url ${QDRANT_URL:-http://qdrant:6333} --max-tokens-per-chunk ${MAX_TOKENS_PER_CHUNK:-800} --overlap-tokens ${OVERLAP_TOKENS:-100}"]

  pipeline:
    image: python:3.12-slim
    container_name: pipeline
    depends_on:
      - qdrant
    working_dir: /workspace
    volumes:
      - ./:/workspace
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL}
      - OPENROUTER_SITE_URL=${OPENROUTER_SITE_URL}
      - OPENROUTER_APP_NAME=${OPENROUTER_APP_NAME}
      - QDRANT_URL=http://qdrant:6333
      - EMBEDDINGS_MODEL=${EMBEDDINGS_MODEL}
      - TOPIC=${TOPIC}
    entrypoint: ["bash", "-lc", "pip install -r requirements.txt && python scripts/run_pipeline.py ideation --topic '${TOPIC:-Vietnam travel reels}' && python scripts/run_pipeline.py suno --script out/01_ideation_and_edl.md && python scripts/run_pipeline.py handoff --idea out/01_ideation_and_edl.md --suno out/03_suno_prompt.txt"]

  server:
    image: python:3.12-slim
    container_name: reelsrag-server
    depends_on:
      - qdrant
    working_dir: /workspace
    volumes:
      - ./:/workspace
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL}
      - OPENROUTER_SITE_URL=${OPENROUTER_SITE_URL}
      - OPENROUTER_APP_NAME=${OPENROUTER_APP_NAME}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SQLITE_PATH=/tmp/database.sqlite
    ports:
      - "8000:8000"
    entrypoint: ["bash", "-lc", "pip install -r requirements.txt && uvicorn server.app:app --host 0.0.0.0 --port 8000 --timeout-graceful-shutdown 150"]
  
  web:
    image: node:20-alpine
    container_name: reelsrag-web
    working_dir: /app
    depends_on:
      - server
    environment:
      - NEXT_PUBLIC_API_BASE=http://server:8000
      - NEXT_CACHE_DIR=/tmp/.next_cache
    volumes:
      - ./web:/app
    ports:
      - "3001:3000"
    entrypoint: ["sh", "-lc", "if [ -f package-lock.json ]; then npm ci; else npm install; fi && npm run dev"]

volumes:
  qdrant_storage:
  flowise_data:
